//Universidad del valle 
//Jose Aguilar y Andrea Samayoa 
// Electrónica Digital 2 
// Profesora: Joseline Ortiz 
// Auxiliar: Rodolfo Urizar 
#include  <ESP32Servo.h>
Servo servomotor;

int pinServo=4;
int angulo=0;
int pinPulsador1=12;
int pinPulsador2= 5;
int statePulsador1=0;
int statePulsador2=0;
int Boton3, Boton4;
int cont=0;
int k=0;
#define LED1 15
#define LED2 16
#define LED3 18
#define BT3 19
#define BT4 21


void setup() {
 
  servomotor.attach(pinServo);//menciona al sistema el pin del servo
  pinMode(pinPulsador1, INPUT);
  pinMode(pinPulsador2, INPUT);
  servomotor.write(angulo);//menciona al codigo cuanto debe moverse el servo


  digitalWrite(LED1, LOW);
  digitalWrite(LED2, LOW);
  digitalWrite(LED3, LOW);

  pinMode(LED1, OUTPUT);
  pinMode(LED2, OUTPUT);
  pinMode(LED3, OUTPUT);

  pinMode(BT3, INPUT);
  pinMode(BT4, INPUT);
}

void loop() {


statePulsador1 = digitalRead(pinPulsador1);
statePulsador2 = digitalRead(pinPulsador2);

 Boton3=digitalRead(BT3); // Selección
 Boton4=digitalRead(BT4); // brillo

if(statePulsador1== HIGH){
  angulo++;
  Serial.println("Botón presionado");

  if (angulo>=180){
    angulo=180;
  }
}

if(statePulsador2 == HIGH){
  angulo--;
   if (angulo<=0){
    angulo=0;
  }
}


 servomotor.write(angulo);
 delay(10);

//eleccción de leds
 if (Boton3 == HIGH){

        cont++;
       

        lucesContador();
        delay(200);

        if (4 < cont){
        cont=0;
      }

      }

//intensidad
 
 if (digitalRead(BT4) == HIGH) {  // Si el pulsador está presionado
          while (digitalRead(BT4) == HIGH && k <= 255) {
            analogWrite(LED1, k);    // Ajustar el brillo del LED
            delay(20);              // Pausa para ver el cambio de brillo
            k = k + 3;              // Incrementar el brillo
          }
          analogWrite(LED1, 0);

            if (k>255){
                k=0;
                analogWrite(LED1, 0);
             
            }
    } 

    if (digitalRead(BT4) == HIGH) {  // Si el pulsador está presionado
          while (digitalRead(BT4) == HIGH && k <= 255) {
            analogWrite(LED2, k);    // Ajustar el brillo del LED
            delay(20);              // Pausa para ver el cambio de brillo
            k = k + 3;              // Incrementar el brillo
          }
          analogWrite(LED2, 0);

            if (k>255){
                k=0;

                analogWrite(LED2, k);
            }
    } 

    if (digitalRead(BT4) == HIGH) {  // Si el pulsador está presionado
              while (digitalRead(BT4) == HIGH && k <= 255) {
                analogWrite(LED3, k);    // Ajustar el brillo del LED
                delay(20);              // Pausa para ver el cambio de brillo
                k = k + 3;              // Incrementar el brillo
              }
              analogWrite(LED3, 0);

                if (k>255){
                    k=0;
                    analogWrite(LED3, 0);
                
                }
        } 

  //parte final 

  if (cont==4){
    if (angulo >= 0 && angulo <= 45) {
        cont=1;
        lucesContador();
          delay(200);
    }

     if (angulo > 45 && angulo <= 135){
        cont=2;
        lucesContador();
          delay(200);
    }

    if (angulo > 135 && angulo <= 180){
        cont=3;
          lucesContador();
          delay(200);
    }
}

}





//funciones
void lucesContador (){
  
                    switch (cont) {
                                    case 1:
                                      digitalWrite(LED1, HIGH);
                                      digitalWrite(LED2, LOW);
                                      digitalWrite(LED3, LOW);
                                      break;
                                    case 2:
                                      digitalWrite(LED1, LOW);
                                      digitalWrite(LED2, HIGH);
                                      digitalWrite(LED3, LOW);
                                      break;
                                    case 3:
                                      digitalWrite(LED1, LOW);
                                      digitalWrite(LED2, LOW);
                                      digitalWrite(LED3, HIGH);
                                      break;
                                   
                                  }                          
delay(500);
}



